version: '3.7'

services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.0
    container_name: elasticsearch
    hostname: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      TZ: "Europe/Moscow"
      ES_JAVA_OPTS: "-Xms1024m -Xms1024m"
    volumes:
      - "./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml"
      - "esdata:/usr/share/elasticsearch/data"
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "2g"
      mode: replicated
      replicas: 1
    restart:
      unless-stopped

  logstash:
    image: docker.elastic.co/logstash/logstash:7.5.0
    container_name: logstash
    hostname: logstash
    # user: root
    volumes:
      - "./logstash/config:/usr/share/logstash/config"
      - "./logstash/patterns:/usr/share/logstash/patterns"
      - "./logstash/pipeline:/usr/share/logstash/pipeline"
      - "./logstash/geoip_db:/usr/share/logstash/geoip_db"
    ports:
      - "5145:5145/udp"
    command: "bin/logstash --config.reload.automatic"
    environment:
      TZ: "Europe/Moscow"
      LS_JAVA_OPTS: "-Xmx512m -Xms512m"
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "1g"
    depends_on:
      - elasticsearch
    restart:
      unless-stopped

  kibana:
    image: docker.elastic.co/kibana/kibana:7.5.0
    container_name: kibana
    hostname: kibana
    ports:
      - "5601:5601"
    volumes:
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    environment:
      TZ: "Europe/Moscow"
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "1g"
      mode: replicated
      replicas: 1
    depends_on:
      - elasticsearch
    restart:
      unless-stopped

volumes:
  esdata:
    driver: local

